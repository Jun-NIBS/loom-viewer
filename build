#! /bin/bash
if [ -a ./release/cache ]; then
  echo "Saving cache folder from previous build."
  mv ./release/cache ./cache
fi
if [ -a ./release ]; then
  rm -r ./release
fi
set -o nounset
set -o errexit

if [ "$1" = "debug" ] || [ "$1" = "-d" ]; then
  echo "Building React in 'debug' mode"
  export NODE_ENV=debug
else
  echo "Building React in 'production' mode. Run \"./build debug\" to build in 'debug' mode"
  export NODE_ENV=production
fi

# Set up a cache-busting integer
v=$RANDOM

# Set up the release directories
mkdir release
if [ -a ./cache ]; then
    echo "Restoring cache folder from previous build."
  mv ./cache ./release/cache
fi
mkdir release/python
mkdir release/python/static
mkdir release/python/static/img
mkdir release/python/static/css
mkdir release/python/static/js
cp img/* release/python/static/img/
cp -r python release/
cp loom release/loom

# Build all the static assets
BINPATH=$(npm -g bin)
$BINPATH/uglifycss css/* > release/python/static/css/bundle-v$v.min.css
$BINPATH/browserify js/loom.js -o temp.js -t [ babelify --presets [ es2015 react ] ]
$BINPATH/uglifyjs js/jquery.min.js js/bootstrap.min.js temp.js -o release/python/static/js/bundle-v$v.min.js
rm temp.js

sed -e "s/{VERSION}/$v/g" index.html > release/python/static/index.html
